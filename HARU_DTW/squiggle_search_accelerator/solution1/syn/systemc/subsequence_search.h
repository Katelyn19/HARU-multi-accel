// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _subsequence_search_HH_
#define _subsequence_search_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "subsequence_searcbkb.h"

namespace ap_rtl {

struct subsequence_search : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > agg_result_dist;
    sc_out< sc_logic > agg_result_dist_ap_vld;
    sc_out< sc_lv<32> > agg_result_end_position;
    sc_out< sc_logic > agg_result_end_position_ap_vld;
    sc_out< sc_lv<8> > x_address0;
    sc_out< sc_logic > x_ce0;
    sc_in< sc_lv<32> > x_q0;
    sc_out< sc_lv<16> > y_address0;
    sc_out< sc_logic > y_ce0;
    sc_in< sc_lv<32> > y_q0;


    // Module declarations
    subsequence_search(sc_module_name name);
    SC_HAS_PROCESS(subsequence_search);

    ~subsequence_search();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    subsequence_searcbkb* cost_x_U;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_311;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > grp_fu_291_p2;
    sc_signal< sc_lv<32> > reg_316;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > cost_x_q0;
    sc_signal< sc_lv<32> > reg_320;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > x_load_reg_557;
    sc_signal< sc_lv<8> > cost_x_addr_reg_562;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln26_fu_354_p1;
    sc_signal< sc_lv<64> > zext_ln26_reg_571;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln25_fu_348_p2;
    sc_signal< sc_lv<8> > r_fu_370_p2;
    sc_signal< sc_lv<8> > r_reg_586;
    sc_signal< sc_lv<32> > x_load_2_reg_607;
    sc_signal< sc_lv<32> > zext_ln33_fu_391_p1;
    sc_signal< sc_lv<32> > zext_ln33_reg_612;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln33_fu_395_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > cost_x_q1;
    sc_signal< sc_lv<32> > grp_fu_338_p3;
    sc_signal< sc_lv<64> > zext_ln43_fu_412_p1;
    sc_signal< sc_lv<64> > zext_ln43_reg_643;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > icmp_ln42_fu_406_p2;
    sc_signal< sc_lv<32> > grp_fu_303_p3;
    sc_signal< sc_lv<32> > select_ln7_1_reg_653;
    sc_signal< sc_lv<8> > i_fu_417_p2;
    sc_signal< sc_lv<8> > i_reg_659;
    sc_signal< sc_lv<32> > add_ln50_fu_467_p2;
    sc_signal< sc_lv<32> > add_ln50_reg_669;
    sc_signal< sc_lv<16> > j_fu_473_p2;
    sc_signal< sc_lv<16> > j_reg_677;
    sc_signal< sc_lv<32> > sub_ln43_fu_479_p2;
    sc_signal< sc_lv<32> > sub_ln43_reg_682;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > left_1_reg_689;
    sc_signal< sc_lv<32> > top_1_fu_514_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > select_ln51_fu_526_p3;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > select_ln51_1_fu_533_p3;
    sc_signal< sc_lv<32> > select_ln51_2_fu_540_p3;
    sc_signal< sc_lv<8> > cost_x_address0;
    sc_signal< sc_logic > cost_x_ce0;
    sc_signal< sc_logic > cost_x_we0;
    sc_signal< sc_lv<32> > cost_x_d0;
    sc_signal< sc_lv<8> > cost_x_address1;
    sc_signal< sc_logic > cost_x_ce1;
    sc_signal< sc_logic > cost_x_we1;
    sc_signal< sc_lv<32> > cost_x_d1;
    sc_signal< sc_lv<8> > r_0_reg_193;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > agg_result_dist_loca_reg_204;
    sc_signal< sc_lv<32> > agg_result_end_posit_reg_215;
    sc_signal< sc_lv<32> > agg_result_dist_load_reg_228;
    sc_signal< sc_lv<16> > j_0_reg_238;
    sc_signal< sc_lv<32> > min_1_reg_250;
    sc_signal< sc_lv<32> > top_left_1_reg_260;
    sc_signal< sc_lv<32> > min_reg_271;
    sc_signal< sc_lv<8> > i_0_reg_280;
    sc_signal< sc_lv<64> > zext_ln26_1_fu_365_p1;
    sc_signal< sc_lv<64> > zext_ln36_fu_401_p1;
    sc_signal< sc_lv<64> > zext_ln45_fu_423_p1;
    sc_signal< sc_lv<32> > add_ln26_1_fu_384_p2;
    sc_signal< sc_lv<32> > grp_fu_291_p0;
    sc_signal< sc_lv<32> > grp_fu_291_p1;
    sc_signal< sc_lv<1> > grp_fu_297_p2;
    sc_signal< sc_lv<1> > grp_fu_332_p2;
    sc_signal< sc_lv<32> > grp_fu_326_p2;
    sc_signal< sc_lv<8> > add_ln26_fu_359_p2;
    sc_signal< sc_lv<32> > abs5_fu_376_p3;
    sc_signal< sc_lv<32> > sub_ln50_fu_428_p2;
    sc_signal< sc_lv<1> > abscond13_fu_439_p2;
    sc_signal< sc_lv<32> > neg12_fu_433_p2;
    sc_signal< sc_lv<1> > icmp_ln11_fu_453_p2;
    sc_signal< sc_lv<32> > abs14_fu_445_p3;
    sc_signal< sc_lv<32> > min_2_fu_459_p3;
    sc_signal< sc_lv<1> > abscond10_fu_490_p2;
    sc_signal< sc_lv<32> > neg9_fu_485_p2;
    sc_signal< sc_lv<1> > icmp_ln11_1_fu_502_p2;
    sc_signal< sc_lv<32> > min_3_fu_507_p3;
    sc_signal< sc_lv<32> > abs11_fu_495_p3;
    sc_signal< sc_lv<1> > icmp_ln51_fu_521_p2;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_F9;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<8> ap_const_lv8_FA;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<16> ap_const_lv16_BD71;
    static const sc_lv<8> ap_const_lv8_F9;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_abs11_fu_495_p3();
    void thread_abs14_fu_445_p3();
    void thread_abs5_fu_376_p3();
    void thread_abscond10_fu_490_p2();
    void thread_abscond13_fu_439_p2();
    void thread_add_ln26_1_fu_384_p2();
    void thread_add_ln26_fu_359_p2();
    void thread_add_ln50_fu_467_p2();
    void thread_agg_result_dist();
    void thread_agg_result_dist_ap_vld();
    void thread_agg_result_end_position();
    void thread_agg_result_end_position_ap_vld();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_cost_x_addr_reg_562();
    void thread_cost_x_address0();
    void thread_cost_x_address1();
    void thread_cost_x_ce0();
    void thread_cost_x_ce1();
    void thread_cost_x_d0();
    void thread_cost_x_d1();
    void thread_cost_x_we0();
    void thread_cost_x_we1();
    void thread_grp_fu_291_p0();
    void thread_grp_fu_291_p1();
    void thread_grp_fu_291_p2();
    void thread_grp_fu_297_p2();
    void thread_grp_fu_303_p3();
    void thread_grp_fu_326_p2();
    void thread_grp_fu_332_p2();
    void thread_grp_fu_338_p3();
    void thread_i_fu_417_p2();
    void thread_icmp_ln11_1_fu_502_p2();
    void thread_icmp_ln11_fu_453_p2();
    void thread_icmp_ln25_fu_348_p2();
    void thread_icmp_ln33_fu_395_p2();
    void thread_icmp_ln42_fu_406_p2();
    void thread_icmp_ln51_fu_521_p2();
    void thread_j_fu_473_p2();
    void thread_min_2_fu_459_p3();
    void thread_min_3_fu_507_p3();
    void thread_neg12_fu_433_p2();
    void thread_neg9_fu_485_p2();
    void thread_r_fu_370_p2();
    void thread_select_ln51_1_fu_533_p3();
    void thread_select_ln51_2_fu_540_p3();
    void thread_select_ln51_fu_526_p3();
    void thread_sub_ln43_fu_479_p2();
    void thread_sub_ln50_fu_428_p2();
    void thread_top_1_fu_514_p2();
    void thread_x_address0();
    void thread_x_ce0();
    void thread_y_address0();
    void thread_y_ce0();
    void thread_zext_ln26_1_fu_365_p1();
    void thread_zext_ln26_fu_354_p1();
    void thread_zext_ln33_fu_391_p1();
    void thread_zext_ln36_fu_401_p1();
    void thread_zext_ln43_fu_412_p1();
    void thread_zext_ln45_fu_423_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
